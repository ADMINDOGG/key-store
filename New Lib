-- DOGHUB HACKER EDITION - Standalone Version
-- Copy วางโค้ดนี้ใน Executor ได้เลย

-- ตรวจสอบว่ามี DogHub อยู่แล้วไหม ถ้ามีให้ลบ
if game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("DogHub") then
    game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("DogHub"):Destroy()
end

-- Services
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- DOGHUB Library
local DogHub = {}
DogHub.__index = DogHub

-- Configuration
local config = {
    MainColor = Color3.fromRGB(5, 15, 10),
    AccentColor = Color3.fromRGB(0, 255, 100),
    SecondaryAccent = Color3.fromRGB(0, 200, 80),
    BackgroundColor = Color3.fromRGB(0, 10, 5),
    TextColor = Color3.fromRGB(0, 255, 100),
    DisabledColor = Color3.fromRGB(40, 60, 45),
    OutlineColor = Color3.fromRGB(0, 255, 100),
    DangerColor = Color3.fromRGB(255, 50, 50),
    AnimationSpeed = 0.2
}

-- Create Window Function
function DogHub:CreateWindow(title)
    local existingGui = playerGui:FindFirstChild("DogHub")
    if existingGui then
        existingGui:Destroy()
    end
    
    local window = {
        Title = title or "DOGHUB",
        Tabs = {},
        CurrentTab = nil,
        Minimized = false,
        ToggleKey = Enum.KeyCode.Insert
    }
    
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "DogHub"
    screenGui.Parent = playerGui
    screenGui.ResetOnSpawn = false
    
    local mainFrame = Instance.new("Frame")
    mainFrame.Name = "MainFrame"
    mainFrame.Size = UDim2.new(0, 500, 0, 350)
    mainFrame.Position = UDim2.new(0.5, -250, 0.5, -175)
    mainFrame.BackgroundColor3 = config.MainColor
    mainFrame.BorderSizePixel = 0
    mainFrame.Parent = screenGui
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = mainFrame
    
    local stroke = Instance.new("UIStroke")
    stroke.Color = config.OutlineColor
    stroke.Thickness = 3
    stroke.Parent = mainFrame
    
    local titleBar = Instance.new("Frame")
    titleBar.Name = "TitleBar"
    titleBar.Size = UDim2.new(1, 0, 0, 30)
    titleBar.Position = UDim2.new(0, 0, 0, 0)
    titleBar.BackgroundColor3 = config.AccentColor
    titleBar.BorderSizePixel = 0
    titleBar.Parent = mainFrame
    
    local titleCorner = Instance.new("UICorner")
    titleCorner.CornerRadius = UDim.new(0, 8)
    titleCorner.Parent = titleBar
    
    local titleText = Instance.new("TextLabel")
    titleText.Name = "Title"
    titleText.Size = UDim2.new(1, -85, 1, 0)
    titleText.Position = UDim2.new(0, 10, 0, 0)
    titleText.BackgroundTransparency = 1
    titleText.Text = "[ " .. window.Title .. " ]"
    titleText.TextColor3 = Color3.fromRGB(0, 0, 0)
    titleText.TextScaled = true
    titleText.Font = Enum.Font.Code
    titleText.Parent = titleBar
    
    local titleStroke = Instance.new("UIStroke")
    titleStroke.Color = config.AccentColor
    titleStroke.Thickness = 2
    titleStroke.Parent = titleText
    
    local minimizeBtn = Instance.new("TextButton")
    minimizeBtn.Name = "MinimizeBtn"
    minimizeBtn.Size = UDim2.new(0, 25, 0, 25)
    minimizeBtn.Position = UDim2.new(1, -55, 0, 2.5)
    minimizeBtn.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    minimizeBtn.Text = "[ - ]"
    minimizeBtn.TextColor3 = config.AccentColor
    minimizeBtn.TextScaled = true
    minimizeBtn.Font = Enum.Font.Code
    minimizeBtn.Parent = titleBar
    
    local closeBtn = Instance.new("TextButton")
    closeBtn.Name = "CloseBtn"
    closeBtn.Size = UDim2.new(0, 25, 0, 25)
    closeBtn.Position = UDim2.new(1, -30, 0, 2.5)
    closeBtn.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    closeBtn.Text = "[ X ]"
    closeBtn.TextColor3 = config.DangerColor
    closeBtn.TextScaled = true
    closeBtn.Font = Enum.Font.Code
    closeBtn.Parent = titleBar
    
    local sidebar = Instance.new("Frame")
    sidebar.Name = "Sidebar"
    sidebar.Size = UDim2.new(0, 150, 1, -30)
    sidebar.Position = UDim2.new(0, 0, 0, 30)
    sidebar.BackgroundColor3 = config.BackgroundColor
    sidebar.BorderSizePixel = 0
    sidebar.Parent = mainFrame
    
    local sidebarStroke = Instance.new("UIStroke")
    sidebarStroke.Color = config.OutlineColor
    sidebarStroke.Thickness = 2
    sidebarStroke.Parent = sidebar
    
    local contentArea = Instance.new("Frame")
    contentArea.Name = "ContentArea"
    contentArea.Size = UDim2.new(1, -150, 1, -30)
    contentArea.Position = UDim2.new(0, 150, 0, 30)
    contentArea.BackgroundColor3 = config.MainColor
    contentArea.BorderSizePixel = 0
    contentArea.Parent = mainFrame
    
    local contentStroke = Instance.new("UIStroke")
    contentStroke.Color = config.OutlineColor
    contentStroke.Thickness = 2
    contentStroke.Parent = contentArea
    
    local sidebarScroll = Instance.new("ScrollingFrame")
    sidebarScroll.Name = "SidebarScroll"
    sidebarScroll.Size = UDim2.new(1, 0, 1, 0)
    sidebarScroll.Position = UDim2.new(0, 0, 0, 0)
    sidebarScroll.BackgroundTransparency = 1
    sidebarScroll.BorderSizePixel = 0
    sidebarScroll.ScrollBarThickness = 4
    sidebarScroll.Parent = sidebar
    
    local sidebarLayout = Instance.new("UIListLayout")
    sidebarLayout.SortOrder = Enum.SortOrder.LayoutOrder
    sidebarLayout.Padding = UDim.new(0, 2)
    sidebarLayout.Parent = sidebarScroll
    
    window.ScreenGui = screenGui
    window.MainFrame = mainFrame
    window.Sidebar = sidebarScroll
    window.ContentArea = contentArea
    window.MinimizeBtn = minimizeBtn
    window.CloseBtn = closeBtn
    
    -- Welcome notification
    spawn(function()
        wait(0.5)
        DogHub:CreateNotification("SYSTEM", "ACCESS GRANTED - DOGHUB INITIALIZED", 3)
    end)
    
    -- Make draggable
    local dragging = false
    local dragInput, mousePos, framePos
    
    titleBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            mousePos = input.Position
            framePos = mainFrame.Position
        end
    end)
    
    titleBar.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local delta = input.Position - mousePos
            mainFrame.Position = UDim2.new(framePos.X.Scale, framePos.X.Offset + delta.X, framePos.Y.Scale, framePos.Y.Offset + delta.Y)
        end
    end)
    
    titleBar.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)
    
    -- Minimize function
    minimizeBtn.MouseButton1Click:Connect(function()
        window.Minimized = not window.Minimized
        local targetSize = window.Minimized and UDim2.new(0, 500, 0, 30) or UDim2.new(0, 500, 0, 350)
        minimizeBtn.Text = window.Minimized and "[ + ]" or "[ - ]"
        TweenService:Create(mainFrame, TweenInfo.new(config.AnimationSpeed), {Size = targetSize}):Play()
    end)
    
    -- Close function
    closeBtn.MouseButton1Click:Connect(function()
        mainFrame.Visible = false
        DogHub:CreateNotification("SYSTEM", "INTERFACE HIDDEN - PRESS TOGGLE KEY TO RESTORE", 2)
    end)
    
    -- Toggle keybind
    UserInputService.InputBegan:Connect(function(input, gameProcessed)
        if gameProcessed then return end
        if input.KeyCode == window.ToggleKey then
            mainFrame.Visible = not mainFrame.Visible
            if mainFrame.Visible then
                DogHub:CreateNotification("SYSTEM", "INTERFACE RESTORED - " .. window.ToggleKey.Name .. " TOGGLE ACTIVE", 2)
            end
        end
    end)
    
    return window
end

-- Create Tab Function
function DogHub:CreateTab(window, name, icon)
    local tab = {
        Name = name,
        Icon = icon or "⚙️",
        Elements = {},
        Visible = false,
        ScrollingFrame = nil
    }
    
    local tabBtn = Instance.new("TextButton")
    tabBtn.Name = name .. "Tab"
    tabBtn.Size = UDim2.new(1, 0, 0, 35)
    tabBtn.BackgroundColor3 = config.BackgroundColor
    tabBtn.BorderSizePixel = 0
    tabBtn.Text = "> " .. tab.Icon .. " " .. name .. " <"
    tabBtn.TextColor3 = config.TextColor
    tabBtn.TextScaled = true
    tabBtn.Font = Enum.Font.Code
    tabBtn.Parent = window.Sidebar
    
    local tabStroke = Instance.new("UIStroke")
    tabStroke.Color = config.AccentColor
    tabStroke.Thickness = 1
    tabStroke.Transparency = 0.5
    tabStroke.Parent = tabBtn
    
    local tabContent = Instance.new("ScrollingFrame")
    tabContent.Name = name .. "Content"
    tabContent.Size = UDim2.new(1, 0, 1, 0)
    tabContent.Position = UDim2.new(0, 0, 0, 0)
    tabContent.BackgroundTransparency = 1
    tabContent.BorderSizePixel = 0
    tabContent.ScrollBarThickness = 4
    tabContent.Visible = false
    tabContent.Parent = window.ContentArea
    
    local contentLayout = Instance.new("UIListLayout")
    contentLayout.SortOrder = Enum.SortOrder.LayoutOrder
    contentLayout.Padding = UDim.new(0, 5)
    contentLayout.Parent = tabContent
    
    local contentPadding = Instance.new("UIPadding")
    contentPadding.PaddingLeft = UDim.new(0, 10)
    contentPadding.PaddingRight = UDim.new(0, 10)
    contentPadding.PaddingTop = UDim.new(0, 10)
    contentPadding.PaddingBottom = UDim.new(0, 10)
    contentPadding.Parent = tabContent
    
    tab.ScrollingFrame = tabContent
    tab.Button = tabBtn
    
    tabBtn.MouseButton1Click:Connect(function()
        for _, otherTab in pairs(window.Tabs) do
            otherTab.ScrollingFrame.Visible = false
            otherTab.Button.BackgroundColor3 = config.BackgroundColor
            otherTab.Button:FindFirstChild("UIStroke").Transparency = 0.5
        end
        
        tabContent.Visible = true
        tabBtn.BackgroundColor3 = config.AccentColor
        tabBtn:FindFirstChild("UIStroke").Transparency = 0
        window.CurrentTab = tab
        
        DogHub:CreateNotification("ACCESS", "MODULE [" .. name .. "] LOADED", 1)
    end)
    
    if #window.Tabs == 0 then
        tabContent.Visible = true
        tabBtn.BackgroundColor3 = config.AccentColor
        tabBtn:FindFirstChild("UIStroke").Transparency = 0
        window.CurrentTab = tab
    end
    
    table.insert(window.Tabs, tab)
    return tab
end

-- Create Toggle Function
function DogHub:CreateToggle(tab, name, defaultValue, callback)
    local toggle = {
        Name = name,
        Value = defaultValue or false,
        Callback = callback or function() end
    }
    
    local toggleFrame = Instance.new("Frame")
    toggleFrame.Name = name .. "Toggle"
    toggleFrame.Size = UDim2.new(1, 0, 0, 35)
    toggleFrame.BackgroundColor3 = config.BackgroundColor
    toggleFrame.BorderSizePixel = 0
    toggleFrame.Parent = tab.ScrollingFrame
    
    local toggleCorner = Instance.new("UICorner")
    toggleCorner.CornerRadius = UDim.new(0, 6)
    toggleCorner.Parent = toggleFrame
    
    local toggleStroke = Instance.new("UIStroke")
    toggleStroke.Color = config.OutlineColor
    toggleStroke.Thickness = 1
    toggleStroke.Transparency = 0.7
    toggleStroke.Parent = toggleFrame
    
    local toggleLabel = Instance.new("TextLabel")
    toggleLabel.Name = "Label"
    toggleLabel.Size = UDim2.new(1, -50, 1, 0)
    toggleLabel.Position = UDim2.new(0, 10, 0, 0)
    toggleLabel.BackgroundTransparency = 1
    toggleLabel.Text = "> " .. name
    toggleLabel.TextColor3 = config.TextColor
    toggleLabel.TextScaled = true
    toggleLabel.Font = Enum.Font.Code
    toggleLabel.TextXAlignment = Enum.TextXAlignment.Left
    toggleLabel.Parent = toggleFrame
    
    local toggleBtn = Instance.new("TextButton")
    toggleBtn.Name = "ToggleBtn"
    toggleBtn.Size = UDim2.new(0, 35, 0, 20)
    toggleBtn.Position = UDim2.new(1, -40, 0.5, -10)
    toggleBtn.BackgroundColor3 = toggle.Value and config.AccentColor or config.DisabledColor
    toggleBtn.BorderSizePixel = 0
    toggleBtn.Text = ""
    toggleBtn.Parent = toggleFrame
    
    local btnCorner = Instance.new("UICorner")
    btnCorner.CornerRadius = UDim.new(0, 10)
    btnCorner.Parent = toggleBtn
    
    local btnStroke = Instance.new("UIStroke")
    btnStroke.Color = config.AccentColor
    btnStroke.Thickness = 2
    btnStroke.Parent = toggleBtn
    
    local toggleIndicator = Instance.new("Frame")
    toggleIndicator.Name = "Indicator"
    toggleIndicator.Size = UDim2.new(0, 16, 0, 16)
    toggleIndicator.Position = toggle.Value and UDim2.new(1, -18, 0.5, -8) or UDim2.new(0, 2, 0.5, -8)
    toggleIndicator.BackgroundColor3 = config.TextColor
    toggleIndicator.BorderSizePixel = 0
    toggleIndicator.Parent = toggleBtn
    
    local indicatorCorner = Instance.new("UICorner")
    indicatorCorner.CornerRadius = UDim.new(0, 8)
    indicatorCorner.Parent = toggleIndicator
    
    local function updateToggle()
        toggle.Value = not toggle.Value
        
        local targetColor = toggle.Value and config.AccentColor or config.DisabledColor
        local targetPos = toggle.Value and UDim2.new(1, -18, 0.5, -8) or UDim2.new(0, 2, 0.5, -8)
        
        TweenService:Create(toggleBtn, TweenInfo.new(config.AnimationSpeed), {BackgroundColor3 = targetColor}):Play()
        TweenService:Create(toggleIndicator, TweenInfo.new(config.AnimationSpeed), {Position = targetPos}):Play()
        
        toggle.Callback(toggle.Value)
    end
    
    toggleBtn.MouseButton1Click:Connect(updateToggle)
    
    table.insert(tab.Elements, toggle)
    return toggle
end

-- Create Button Function
function DogHub:CreateButton(tab, name, callback)
    local button = {
        Name = name,
        Callback = callback or function() end
    }
    
    local buttonFrame = Instance.new("TextButton")
    buttonFrame.Name = name .. "Button"
    buttonFrame.Size = UDim2.new(1, 0, 0, 35)
    buttonFrame.BackgroundColor3 = config.BackgroundColor
    buttonFrame.BorderSizePixel = 0
    buttonFrame.Text = "[ EXECUTE: " .. name .. " ]"
    buttonFrame.TextColor3 = config.TextColor
    buttonFrame.TextScaled = true
    buttonFrame.Font = Enum.Font.Code
    buttonFrame.Parent = tab.ScrollingFrame
    
    local buttonCorner = Instance.new("UICorner")
    buttonCorner.CornerRadius = UDim.new(0, 6)
    buttonCorner.Parent = buttonFrame
    
    local buttonStroke = Instance.new("UIStroke")
    buttonStroke.Color = config.AccentColor
    buttonStroke.Thickness = 2
    buttonStroke.Parent = buttonFrame
    
    buttonFrame.MouseEnter:Connect(function()
        TweenService:Create(buttonFrame, TweenInfo.new(0.1), {BackgroundColor3 = config.AccentColor}):Play()
        TweenService:Create(buttonFrame, TweenInfo.new(0.1), {TextColor3 = Color3.fromRGB(0, 0, 0)}):Play()
        buttonFrame.Text = "[ READY TO EXECUTE ]"
    end)
    
    buttonFrame.MouseLeave:Connect(function()
        TweenService:Create(buttonFrame, TweenInfo.new(0.1), {BackgroundColor3 = config.BackgroundColor}):Play()
        TweenService:Create(buttonFrame, TweenInfo.new(0.1), {TextColor3 = config.TextColor}):Play()
        buttonFrame.Text = "[ EXECUTE: " .. name .. " ]"
    end)
    
    buttonFrame.MouseButton1Click:Connect(function()
        buttonFrame.Text = "[ EXECUTED ]"
        wait(0.3)
        buttonFrame.Text = "[ EXECUTE: " .. name .. " ]"
        button.Callback()
    end)
    
    table.insert(tab.Elements, button)
    return button
end

-- Create Section Function
function DogHub:CreateSection(tab, name)
    local section = {
        Name = name
    }
    
    local sectionFrame = Instance.new("Frame")
    sectionFrame.Name = name .. "Section"
    sectionFrame.Size = UDim2.new(1, 0, 0, 30)
    sectionFrame.BackgroundTransparency = 1
    sectionFrame.Parent = tab.ScrollingFrame
    
    local sectionLine = Instance.new("Frame")
    sectionLine.Name = "Line"
    sectionLine.Size = UDim2.new(1, -20, 0, 2)
    sectionLine.Position = UDim2.new(0, 10, 1, -15)
    sectionLine.BackgroundColor3 = config.AccentColor
    sectionLine.BorderSizePixel = 0
    sectionLine.Parent = sectionFrame
    
    local gradient = Instance.new("UIGradient")
    gradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 100, 50)),
        ColorSequenceKeypoint.new(0.5, config.AccentColor),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 100, 50))
    }
    gradient.Parent = sectionLine
    
    local sectionLabel = Instance.new("TextLabel")
    sectionLabel.Name = "SectionLabel"
    sectionLabel.Size = UDim2.new(1, 0, 1, -10)
    sectionLabel.Position = UDim2.new(0, 10, 0, 0)
    sectionLabel.BackgroundTransparency = 1
    sectionLabel.Text = "// " .. name .. " //"
    sectionLabel.TextColor3 = config.AccentColor
    sectionLabel.TextScaled = true
    sectionLabel.Font = Enum.Font.Code
    sectionLabel.TextXAlignment = Enum.TextXAlignment.Left
    sectionLabel.Parent = sectionFrame
    
    table.insert(tab.Elements, section)
    return section
end

-- Notification System
function DogHub:CreateNotification(title, text, duration)
    duration = duration or 3
    
    for _, gui in pairs(playerGui:GetChildren()) do
        if gui.Name == "DogHubNotification" then
            gui:Destroy()
        end
    end
    
    local notificationGui = Instance.new("ScreenGui")
    notificationGui.Name = "DogHubNotification"
    notificationGui.Parent = playerGui
    
    local notificationFrame = Instance.new("Frame")
    notificationFrame.Name = "NotificationFrame"
    notificationFrame.Size = UDim2.new(0, 350, 0, 90)
    notificationFrame.Position = UDim2.new(1, 10, 1, -100)
    notificationFrame.BackgroundColor3 = config.BackgroundColor
    notificationFrame.BorderSizePixel = 0
    notificationFrame.Parent = notificationGui
    
    local notificationCorner = Instance.new("UICorner")
    notificationCorner.CornerRadius = UDim.new(0, 8)
    notificationCorner.Parent = notificationFrame
    
    local notificationStroke = Instance.new("UIStroke")
    notificationStroke.Color = config.AccentColor
    notificationStroke.Thickness = 2
    notificationStroke.Parent = notificationFrame
    
    local titleLabel = Instance.new("TextLabel")
    titleLabel.Name = "Title"
    titleLabel.Size = UDim2.new(1, -20, 0, 25)
    titleLabel.Position = UDim2.new(0, 10, 0, 5)
    titleLabel.BackgroundTransparency = 1
    titleLabel.Text = "[ " .. title .. " ]"
    titleLabel.TextColor3 = config.AccentColor
    titleLabel.TextScaled = true
    titleLabel.Font = Enum.Font.Code
    titleLabel.TextXAlignment = Enum.TextXAlignment.Left
    titleLabel.Parent = notificationFrame
    
    local textLabel = Instance.new("TextLabel")
    textLabel.Name = "Text"
    textLabel.Size = UDim2.new(1, -20, 0, 50)
    textLabel.Position = UDim2.new(0, 10, 0, 30)
    textLabel.BackgroundTransparency = 1
    textLabel.Text = "> " .. text
    textLabel.TextColor3 = config.TextColor
    textLabel.TextScaled = true
    textLabel.Font = Enum.Font.Code
    textLabel.TextXAlignment = Enum.TextXAlignment.Left
    textLabel.TextWrapped = true
    textLabel.Parent = notificationFrame
    
    notificationFrame:TweenPosition(
        UDim2.new(1, -360, 1, -100),
        "Out",
        "Quart",
        0.5,
        true
    )
    
    game:GetService("Debris"):AddItem(notificationGui, duration + 0.5)
    
    wait(duration)
    
    notificationFrame:TweenPosition(
        UDim2.new(1, 10, 1, -100),
        "In",
        "Quart",
        0.5,
        true
    )
end

-- Auto-resize content
local function updateContentSize(scrollingFrame)
    local layout = scrollingFrame:FindFirstChild("UIListLayout")
    if layout then
        scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, layout.AbsoluteContentSize.Y + 20)
    end
end

RunService.Heartbeat:Connect(function()
    for _, gui in pairs(playerGui:GetChildren()) do
        if gui.Name == "DogHub" then
            for _, frame in pairs(gui:GetDescendants()) do
                if frame:IsA("ScrollingFrame") and frame.Name:match("Content$") then
                    updateContentSize(frame)
                end
                if frame:IsA("ScrollingFrame") and frame.Name == "SidebarScroll" then
                    updateContentSize(frame)
                end
            end
        end
    end
end)

-- Example Usage
function DogHub:Example()
    local window = self:CreateWindow("DOGHUB HACKER")
    
    local mainTab = self:CreateTab(window, "Main", "⚡")
    local settingsTab = self:CreateTab(window, "Settings", "⚙️")
    
    self:CreateSection(mainTab, "PLAYER_HACKS")
    
    self:CreateToggle(mainTab, "Speed Hack", false, function(value)
        _G.SpeedHack = value
        if value then
            game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 100
            self:CreateNotification("HACK", "SPEED HACK ACTIVATED", 2)
        else
            game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 16
        end
    end)
    
    self:CreateButton(mainTab, "Reset Character", function()
        game.Players.LocalPlayer.Character.Humanoid.Health = 0
        self:CreateNotification("SYSTEM", "CHARACTER RESET EXECUTED", 2)
    end)
    
    self:CreateSection(settingsTab, "INTERFACE")
    
    self:CreateButton(settingsTab, "Test Notification", function()
        self:CreateNotification("TEST", "NOTIFICATION SYSTEM OPERATIONAL", 3)
    end)
    
    return window
end

-- Print success message
print("DOGHUB HACKER EDITION LOADED SUCCESSFULLY!")
print("Usage: DogHub:CreateWindow('Your Title')")
print("Or try: DogHub:Example()")

-- Return the library
return DogHub
